PJ.Math={};PJ.Math.version="4.0";PJ.Math.name="Math";PJ.Math.toString=function(){return"PJ JavaScript Library "+PJ.name+" Module v"+PJ.version};PJ.Math.ANGLE_UNIT_TURN=1;PJ.Math.ANGLE_UNIT_QUADRANT=4;PJ.Math.ANGLE_UNIT_SEXTANT=6;PJ.Math.ANGLE_UNIT_RADIAN=2*Math.PI;PJ.Math.ANGLE_UNIT_HOUR=24;PJ.Math.ANGLE_UNIT_POINT=32;PJ.Math.ANGLE_UNIT_HEXACONTADE=60;PJ.Math.ANGLE_UNIT_BINARY_DEGREE=256;PJ.Math.ANGLE_UNIT_DEGREE=360;PJ.Math.ANGLE_UNIT_GRAD=400;PJ.Math.ANGLE_UNIT_MIL=6400;PJ.Math.ANGLE_UNIT_ARC_MINUTE=21600;PJ.Math.ANGLE_UNIT_ARC_SECOND=1296000;PJ.Math.isPrime=function(n){if(!PJ.Numeric.isInteger(n)){return false}else{if(n<2){return false}else{var r=true;for(var i=2;i<n;i++){if((n%i)===0){r=false;break}}return r}}};PJ.Math.factorial=function(n){if(!PJ.Numeric.isInteger(n)){return Number.NaN}else{if(n<0){return Number.NaN}else{var t=0;if(n===0){t=1}else{t=n}for(var i=n-1;i>0;i--){t*=i}return t}}};PJ.Math.gcd=function(_args){if(arguments.length<2){throw new PJ.IllegalArgumentException("too few arguments")}else{if(!PJ.Numeric.isInteger(!arguments[0])){throw new PJ.IllegalArgumentException("Parameter 0 is not an integer.")}else{var result=arguments[0];for(var i=1;i<arguments.length;i++){if(!PJ.Numeric.isInteger(!arguments[i])){throw new PJ.IllegalArgumentException("Parameter "+i+" is not an integer.")}else{var t=0,y=arguments[i];while(y!==0){t=result%y;result=y;y=t}}}return result}}};PJ.Math.lcm=function(_args){if(arguments.length<2){throw new PJ.IllegalArgumentException("too few arguments")}else{if(!PJ.Numeric.isInteger(!arguments[0])){throw new PJ.IllegalArgumentException("Parameter 0 is not an integer.")}else{var _lcm=function(x,y){return(x*y)/PJ.Math.gcd(x,y)};var result=arguments[0];for(var i=1;i<arguments.length;i++){if(!PJ.Numeric.isInteger(!arguments[i])){throw new PJ.IllegalArgumentException("Parameter "+i+" is not an integer.")}else{result=_lcm(result,arguments[i])}}return result}}};PJ.Math.distance=function(pt1,pt2){if(!PJ.isArray(pt1)||!PJ.isArray(pt2)){throw new PJ.IllegalArgumentException("Parmaters must be arrays.")}var dims=Math.min(pt1.length,pt2.length);var dist=0;for(var i=0;i<dims;i++){if(!PJ.isNumber(pt1[i])){throw new PJ.NotNumericException("Point 1, Dimension "+i+" is not a a number.")}if(!PJ.isNumber(pt2[i])){throw new PJ.NotNumericException("Point 2, Dimension "+i+" is not a a number.")}dist+=Math.pow(pt2[i]-pt1[i],2)}return Math.sqrt(dist)};PJ.Math.midpoint=function(pt1,pt2){var dims=Math.min(pt1.length,pt2.length);var midpt=[];for(var i=0;i<dims;i++){if(!PJ.isNumber(pt1[i])){throw new PJ.NotNumericException("Point 1, Dimension "+i+" is not a a number.")}if(!PJ.isNumber(pt2[i])){throw new PJ.NotNumericException("Point 2, Dimension "+i+" is not a a number.")}midpt[i]=(pt2[i]-pt1[i])/2}return midpt};PJ.Math.hypotenuse=function(_args){if(arguments.length<2){throw new PJ.IllegalArgumentException("too few arguments")}else{var hyp=0,count=arguments.length;for(var i=0;i<count;i++){if(!PJ.Numeric.isInteger(!arguments[i])){throw new PJ.IllegalArgumentException("Parameter "+i+" is not an integer.")}else{hyp+=Math.pow(arguments[i],2)}}return Math.sqrt(hyp)}};PJ.Math.quadratic=function(a,b,c){if(!PJ.isNumber(a)){throw new PJ.IllegalArgumentException("Parameter a must be a number.")}if(!PJ.isNumber(b)){throw new PJ.IllegalArgumentException("Parameter b must be a number.")}if(!PJ.isNumber(c)){throw new PJ.IllegalArgumentException("Parameter c must be a number.")}var _b=-1*b,discrim=Math.pow(b,2)-(4*a*c),den=2*a;if(discrim===0){return[_b/den]}else{if(discrim>0){var root=Math.sqrt(discrim),sol1=(_b+root)/den,sol2=(_b-root)/den;return[sol1,sol2]}else{var real=(_b/den),img=((Math.sqrt(Math.abs(discrim))/den)),sol1=real+" + i*"+img,sol2=real+" - i*"+img;return[sol1,sol2]}}};PJ.Math.cubic=function(a,b,c,d){if(!PJ.isNumber(a)){throw new PJ.IllegalArgumentException("Parameter a must be a number.")}if(!PJ.isNumber(b)){throw new PJ.IllegalArgumentException("Parameter b must be a number.")}if(!PJ.isNumber(c)){throw new PJ.IllegalArgumentException("Parameter c must be a number.")}if(!PJ.isNumber(d)){throw new PJ.IllegalArgumentException("Parameter d must be a number.")}var f=((3*c/a)-(Math.pow(b,2)/Math.pow(a,2)))/3,g=((2*Math.pow(b,3)/Math.pow(a,3))-(9*b*c/Math.pow(a,2))+(27*d/a))/27,h=(Math.pow(g,2)/4)+(Math.pow(f,3)/27);if(h>0){var r=-1*(g/2)+Math.pow(h,(1/2)),s=Math.pow(r,(1/3)),t=-1*(g/2)-Math.pow(h,(1/2)),u=0;if(t<0){t=Math.abs(t);u=-1*Math.pow(t,(1/3))}else{u=Math.pow(t,(1/3))}return[-1,(s+u)-(b/(3*a)),(-1*((s+u)/2))-(b/(3*a))+" + i*"+((s-u)*Math.pow(3,(1/2)))/2,(-1*((s+u)/2))-(b/(3*a))+" - i*"+((s-u)*Math.pow(3,(1/2)))/2]}else{var i=Math.pow(((Math.pow(g,2)/4)-h),(1/2)),j=Math.pow(i,(1/3)),k=Math.acos(-1*(g/(2*i))),l=j*-1,m=Math.cos(k/3),n=Math.sqrt(3)*Math.sin(k/3),p=(b/(3*a))*-1;return[0,(2*j)*Math.cos(k/3)-(b/(3*a)),l*(m+n)+p,l*(m-n)+p]}};PJ.Math.nFactorize=function(n){if(!PJ.Math.isInteger(n)){throw new PJ.IllegalArgumentException("Parameter must be an integer.")}var m=Math.abs(Math.floor(n));var f=new Array();f[0]=1;if(m>=2){for(var i=2;i<=m;i++){if((m%i)===0){f[f.length]=i}}}return f};PJ.Math.nPr=function(n,r){if(!PJ.isNumber(n)){throw new PJ.IllegalArgumentException("Parameter n must be a number.")}if(!PJ.isNumber(r)){throw new PJ.IllegalArgumentException("Parameter r must be a number.")}var _n=Math.abs(Math.floor(n)),_r;if(PJ.typeOf(r)==="number"){_r=r}else{if(PJ.typeOf(r)==="array"){_r=r}else{_r=_n}}if(PJ.typeOf(_r)==="array"){var den=1;for(var i in _r){var ele=Math.abs(Math.floor(_r[i]));den*=PJ.Math.factorial(ele)}return PJ.Math.factorial(_n)/den}else{if(_r>_n){return 0}else{return PJ.Math.factorial(_n)/PJ.Math.factorial(_n-_r)}}};PJ.Math.nCr=function(n,r,b){if(!PJ.isNumber(n)){throw new PJ.IllegalArgumentException("Parameter n must be a number.")}if(!PJ.isNumber(r)){throw new PJ.IllegalArgumentException("Parameter r must be a number.")}var _n=Math.abs(Math.floor(n)),_r=Math.abs(Math.floor(r));if(_r>_n){return 0}else{if(PJ.parseBoolean(b)){_n=_n+_r-1}return PJ.Math.factorial(_n)/(PJ.Math.factorial(_r)*PJ.Math.factorial(_n-_r))}};PJ.Math.convert_angle=function(val,from,to){if(!PJ.isNumber(val)){throw new PJ.IllegalArgumentException("Parameter val must be a number.")}if(typeof from==="undefined"){from=PJ.Math.ANGLE_UNIT_TURN}else{if(!PJ.isNumber(from)){throw new PJ.IllegalArgumentException("Parameter from must be a number.")}}if(typeof to==="undefined"){to=PJ.Math.ANGLE_UNIT_TURN}else{if(!PJ.isNumber(to)){throw new PJ.IllegalArgumentException("Parameter to must be a number.")}}if(val===0){return 0}else{if(from===to){return val}else{var turns=val;if(from!==PJ.Math.Trig.ANGLE_UNIT_TURN){turns=val/from}return turns*to}}};